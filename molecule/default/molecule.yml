---
dependency:
  name: galaxy
driver:
  name: docker
platforms:
  - name: node1
    hostname: node1
    image: "geerlingguy/docker-${MOLECULE_DISTRO:-debian11}-ansible:latest"
    volumes:
      - /sys/fs/cgroup:/sys/fs/cgroup:rw
    privileged: true
    cgroupns_mode: host
    pre_build_image: true
    command: ""
    capabilities:
      - NET_ADMIN
      - SYS_MODULE
    sysctls:
      net.ipv4.ip_forward: 1
    groups:
      - wireguard_nodes
  - name: node2
    hostname: node2
    image: "geerlingguy/docker-${MOLECULE_DISTRO:-debian11}-ansible:latest"
    volumes:
      - /sys/fs/cgroup:/sys/fs/cgroup:rw
    privileged: true
    cgroupns_mode: host
    pre_build_image: true
    command: ""
    capabilities:
      - NET_ADMIN
      - SYS_MODULE
    sysctls:
      net.ipv4.ip_forward: 1
    groups:
      - wireguard_nodes
  - name: node3
    hostname: node3
    image: "geerlingguy/docker-${MOLECULE_DISTRO:-debian11}-ansible:latest"
    volumes:
      - /sys/fs/cgroup:/sys/fs/cgroup:rw
    privileged: true
    cgroupns_mode: host
    pre_build_image: true
    command: ""
    capabilities:
      - NET_ADMIN
      - SYS_MODULE
    sysctls:
      net.ipv4.ip_forward: 1
    groups:
      - wireguard_nodes
provisioner:
  name: ansible
  playbooks:
    converge: converge/playbook.yml
  inventory:
    group_vars:
      wireguard_nodes:
        wireguard_address_prefix: "10.8.0"
        bridge_address_prefix: "172.20.0"
        bridge_interface: br10
verifier:
  name: ansible
lint: |
  set -e
  yamllint .
  ansible-lint
scenario:
  name: default
  create_sequence:
    - create
  check_sequence:
    - create
    - converge
    - check
  converge_sequence:
    - create
    - prepare
    - converge
  destroy_sequence:
    - destroy
  test_sequence:
    - create
    - prepare
    - converge
    - idempotence
    - verify
    - destroy
