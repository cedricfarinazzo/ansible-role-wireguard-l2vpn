---
- name: Verify
  hosts: wireguard_nodes
  become: true
  vars:
    wireguard_interface: wg0
    vxlan_interface: vxlan0
    bridge_interface: br10
    # Use the same configuration as in molecule.yml group_vars
    wireguard_address_prefix: "10.8.0"
    bridge_address_prefix: "172.20.0"
    wireguard_key_rotation_days: 30  # Key rotation threshold in days
  tasks:
    - name: Check virtualization type
      ansible.builtin.debug:
        msg: "Running in {{ ansible_virtualization_type }} environment"

    - name: Check if Wireguard interface exists
      ansible.builtin.command: ip link show {{ wireguard_interface }}
      register: wg_interface_result
      changed_when: false
      failed_when: false

    - name: Display Wireguard interface info
      ansible.builtin.debug:
        msg: "{{ wg_interface_result.stdout_lines | default(['Not found']) }}"

    - name: Skip service check in Docker environment
      ansible.builtin.set_fact:
        skip_service_check: "{{ ansible_virtualization_type in ['docker', 'container', 'containerd'] }}"

    - name: Check if VXLAN interface exists
      ansible.builtin.command: ip link show {{ vxlan_interface }}
      register: vxlan_interface_result
      changed_when: false
      failed_when: false

    - name: Display VXLAN interface info
      ansible.builtin.debug:
        msg: "{{ vxlan_interface_result.stdout_lines | default(['Not found']) }}"

    - name: Check if Bridge interface exists
      ansible.builtin.command: ip link show {{ bridge_interface }}
      register: bridge_interface_result
      changed_when: false
      failed_when: false

    - name: Display Bridge interface info
      ansible.builtin.debug:
        msg: "{{ bridge_interface_result.stdout_lines | default(['Not found']) }}"

    # Key rotation verification
    - name: Check if backups directory exists (indicates key rotation occurred)
      ansible.builtin.stat:
        path: /etc/wireguard/backups
      register: backups_dir_check

    - name: List backup files if they exist
      ansible.builtin.find:
        paths: /etc/wireguard/backups
        patterns: "privatekey_*"
      register: backup_files
      when: backups_dir_check.stat.exists

    - name: Display key rotation evidence
      ansible.builtin.debug:
        msg: >-
          Key rotation evidence for {{ inventory_hostname }}:
          Backups directory exists: {{ backups_dir_check.stat.exists }}
          {% if backup_files is defined and backup_files.files %}
          Backup files found: {{ backup_files.files | length }}
          {% endif %}

    - name: Check current private key age
      ansible.builtin.stat:
        path: /etc/wireguard/privatekey
      register: current_key_stat

    - name: Display current key age
      ansible.builtin.debug:
        msg: >-
          Current private key age: 
          {{ ((ansible_date_time.epoch | int) - (current_key_stat.stat.mtime | default(0))) // 86400 }} days old
      when: current_key_stat.stat.exists

    # failed if current key is older than rotation threshold
    - name: Fail if current key is older than rotation threshold
      ansible.builtin.fail:
        msg: >-
          Current private key is too old ({{ ((ansible_date_time.epoch | int) - (current_key_stat.stat.mtime | default(0))) // 86400 }} days old).
          Key rotation may have failed.
      when: current_key_stat.stat.exists and
            ((ansible_date_time.epoch | int) - (current_key_stat.stat.mtime | default(0))) // 86400 >= wireguard_key_rotation_days | int

    # Get WireGuard IP addresses for all nodes
    - name: Get WireGuard IP for current node
      ansible.builtin.set_fact:
        current_wg_ip: "{{ wireguard_address_prefix }}.{{ groups['wireguard_nodes'].index(inventory_hostname) + 10 }}"

    - name: Build list of other WireGuard nodes to test
      ansible.builtin.set_fact:
        other_wg_nodes: >-
          {{
            groups['wireguard_nodes'] |
            reject('equalto', inventory_hostname) |
            map('extract', hostvars, 'inventory_hostname') |
            list
          }}

    - name: Test WireGuard connectivity to other nodes
      ansible.builtin.shell: |
        ping -c 1 -W 5 {{ wireguard_address_prefix }}.{{ groups['wireguard_nodes'].index(item) + 10 }}
      register: wg_ping_result
      changed_when: false
      loop: "{{ other_wg_nodes }}"
      when: other_wg_nodes | length > 0

    - name: Display WireGuard ping results
      ansible.builtin.debug:
        msg: >-
          WireGuard ping from {{ inventory_hostname }} ({{ current_wg_ip }}) to
          {{ item.item }} ({{ wireguard_address_prefix }}.{{ groups['wireguard_nodes'].index(item.item) + 10 }}):
          {{ 'Success' if item.rc == 0 else 'Failed' }}
      loop: "{{ wg_ping_result.results | default([]) }}"
      when: wg_ping_result is defined and wg_ping_result.results is defined

    # Get Bridge IP addresses for all nodes
    - name: Get Bridge IP for current node
      ansible.builtin.set_fact:
        current_bridge_ip: "{{ bridge_address_prefix }}.{{ groups['wireguard_nodes'].index(inventory_hostname) + 11 }}"

    - name: Test bridge connectivity to other nodes
      ansible.builtin.shell: |
        ip a show dev {{ bridge_interface }} | grep -q "inet " &&
        ping -c 1 -W 5 {{ bridge_address_prefix }}.{{ groups['wireguard_nodes'].index(item) + 11 }}
      register: bridge_ping_result
      changed_when: false
      loop: "{{ other_wg_nodes }}"
      when: other_wg_nodes | length > 0

    - name: Display bridge ping results
      ansible.builtin.debug:
        msg: >-
          Bridge ping from {{ inventory_hostname }} ({{ current_bridge_ip }}) to
          {{ item.item }} ({{ bridge_address_prefix }}.{{ groups['wireguard_nodes'].index(item.item) + 11 }}):
          {{ 'Success' if item.rc == 0 else 'Failed' }}
      loop: "{{ bridge_ping_result.results | default([]) }}"
      when: bridge_ping_result is defined and bridge_ping_result.results is defined

    - name: Verify Wireguard peers
      ansible.builtin.command: wg show
      register: wg_show_result
      changed_when: false

    - name: Display Wireguard peer information
      ansible.builtin.debug:
        msg: "{{ wg_show_result.stdout_lines }}"

    - name: Summary of connectivity tests
      ansible.builtin.debug:
        msg: |
          === Connectivity Test Summary for {{ inventory_hostname }} ===
          WireGuard IP: {{ current_wg_ip }}
          Bridge IP: {{ current_bridge_ip }}
          Total nodes in cluster: {{ groups['wireguard_nodes'] | length }}
          Other nodes tested: {{ other_wg_nodes | length }}
