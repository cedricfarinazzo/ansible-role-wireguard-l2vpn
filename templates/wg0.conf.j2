[Interface]
Address = {{ wireguard_address_prefix }}.{{ groups['wireguard_nodes'].index(inventory_hostname) + 10 }}/{{ wireguard_netmask }}
ListenPort = {{ wireguard_port }}
PrivateKey = {{ wireguard_private_key }}

# Create VXLAN interface and bridge on interface up
PostUp = ip link add {{ vxlan_interface }} type vxlan id {{ vxlan_id }} local {{ wireguard_address_prefix }}.{{ groups['wireguard_nodes'].index(inventory_hostname) + 10 }} dstport {{ vxlan_port }} dev %i nolearning
PostUp = ip link set {{ vxlan_interface }} up
PostUp = ip link add {{ bridge_interface }} type bridge || true
PostUp = ip link set {{ bridge_interface }} up
PostUp = ip link set {{ vxlan_interface }} master {{ bridge_interface }}
PostUp = ip addr add {{ bridge_address_prefix }}.{{ bridge_address_offset }}/{{ bridge_netmask }} dev {{ bridge_interface }} || true
PostUp = echo 1 > /proc/sys/net/ipv4/ip_forward
{% if groups['all'] | length > 1 %}
{% for host in groups['all'] %}
{% if host != inventory_hostname %}
PostUp = bridge fdb append 00:00:00:00:00:00 dev {{ vxlan_interface }} dst {{ wireguard_address_prefix }}.{{ groups['wireguard_nodes'].index(host) + 10 }} || true
{% endif %}
{% endfor %}
{% endif %}

# Clean up interfaces on interface down
PostDown = ip link del {{ vxlan_interface }} || true
PostDown = ip link del {{ bridge_interface }} || true

{% if groups['all'] | length > 1 %}
{% for host in groups['all'] %}
{% if host != inventory_hostname %}
[Peer]
# {{ host }}
PublicKey = {{ hostvars[host]['wireguard_public_key'] }}
AllowedIPs = {{ wireguard_address_prefix }}.{{ groups['wireguard_nodes'].index(host) + 10 }}/32
Endpoint = {{ hostvars[host]['ansible_default_ipv4']['address'] | default('127.0.0.1') }}:{{ wireguard_port }}
PersistentKeepalive = 25
{% endif %}
{% endfor %}
{% endif %}
